// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: midimessage.proto

#include "midimessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_midimessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_midimessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_midimessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MidiData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_midimessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PortDescription;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_midimessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PublishedMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_midimessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SubscribeRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_midimessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MessageMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_midimessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PortList;
}  // namespace protobuf_midimessage_2eproto
class PortDescriptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PortDescription>
      _instance;
} _PortDescription_default_instance_;
class PortListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PortList>
      _instance;
} _PortList_default_instance_;
class PublishedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PublishedMessage>
      _instance;
} _PublishedMessage_default_instance_;
class SubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest>
      _instance;
} _SubscribeRequest_default_instance_;
class MessageMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageMetadata>
      _instance;
} _MessageMetadata_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class MidiDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MidiData>
      _instance;
} _MidiData_default_instance_;
class MidiMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MidiMessage>
      _instance;
  const ::MessageMetadata* message_metadata_;
  const ::Error* error_;
  const ::MidiData* midi_data_;
  ::google::protobuf::internal::ArenaStringPtr acked_message_;
  const ::PortList* ports_;
  const ::PublishedMessage* published_message_;
  const ::SubscribeRequest* subscribe_request_;
} _MidiMessage_default_instance_;
namespace protobuf_midimessage_2eproto {
static void InitDefaultsPortDescription() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PortDescription_default_instance_;
    new (ptr) ::PortDescription();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PortDescription::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PortDescription =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPortDescription}, {}};

static void InitDefaultsPortList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PortList_default_instance_;
    new (ptr) ::PortList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PortList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PortList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPortList}, {
      &protobuf_midimessage_2eproto::scc_info_PortDescription.base,}};

static void InitDefaultsPublishedMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PublishedMessage_default_instance_;
    new (ptr) ::PublishedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PublishedMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PublishedMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPublishedMessage}, {}};

static void InitDefaultsSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SubscribeRequest_default_instance_;
    new (ptr) ::SubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubscribeRequest}, {}};

static void InitDefaultsMessageMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MessageMetadata_default_instance_;
    new (ptr) ::MessageMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MessageMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessageMetadata}, {
      &protobuf_midimessage_2eproto::scc_info_PortList.base,}};

static void InitDefaultsError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Error_default_instance_;
    new (ptr) ::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsError}, {}};

static void InitDefaultsMidiData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MidiData_default_instance_;
    new (ptr) ::MidiData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MidiData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MidiData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMidiData}, {}};

static void InitDefaultsMidiMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MidiMessage_default_instance_;
    new (ptr) ::MidiMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MidiMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_MidiMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsMidiMessage}, {
      &protobuf_midimessage_2eproto::scc_info_MessageMetadata.base,
      &protobuf_midimessage_2eproto::scc_info_Error.base,
      &protobuf_midimessage_2eproto::scc_info_MidiData.base,
      &protobuf_midimessage_2eproto::scc_info_PortList.base,
      &protobuf_midimessage_2eproto::scc_info_PublishedMessage.base,
      &protobuf_midimessage_2eproto::scc_info_SubscribeRequest.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PortDescription.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PortList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PublishedMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MidiData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MidiMessage.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PortDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PortDescription, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PortDescription, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PortDescription, create_dynamic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PortDescription, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PortList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PortList, ports_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedMessage, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedMessage, sender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PublishedMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, requestnode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SubscribeRequest, is_subscription_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, friendly_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, is_master_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, software_package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, software_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageMetadata, ports_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Error, error_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Error, severity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiData, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiMessage, message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiMessage, last_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiMessage, message_type_),
  offsetof(::MidiMessageDefaultTypeInternal, message_metadata_),
  offsetof(::MidiMessageDefaultTypeInternal, error_),
  offsetof(::MidiMessageDefaultTypeInternal, midi_data_),
  offsetof(::MidiMessageDefaultTypeInternal, acked_message_),
  offsetof(::MidiMessageDefaultTypeInternal, ports_),
  offsetof(::MidiMessageDefaultTypeInternal, published_message_),
  offsetof(::MidiMessageDefaultTypeInternal, subscribe_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MidiMessage, payload_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PortDescription)},
  { 9, -1, sizeof(::PortList)},
  { 15, -1, sizeof(::PublishedMessage)},
  { 23, -1, sizeof(::SubscribeRequest)},
  { 31, -1, sizeof(::MessageMetadata)},
  { 43, -1, sizeof(::Error)},
  { 50, -1, sizeof(::MidiData)},
  { 57, -1, sizeof(::MidiMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PortDescription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PortList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PublishedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MessageMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MidiData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MidiMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "midimessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021midimessage.proto\"\234\001\n\017PortDescription\022"
      "-\n\tdirection\030\001 \001(\0162\032.PortDescription.Dir"
      "ection\022\014\n\004name\030\002 \001(\t\022\026\n\016create_dynamic\030\003"
      " \001(\010\022\013\n\003key\030\004 \001(\005\"\'\n\tDirection\022\006\n\002IN\020\000\022\007"
      "\n\003OUT\020\001\022\t\n\005INOUT\020\002\"+\n\010PortList\022\037\n\005ports\030"
      "\001 \003(\0132\020.PortDescription\"B\n\020PublishedMess"
      "age\022\r\n\005topic\030\001 \001(\t\022\016\n\006sender\030\002 \001(\t\022\017\n\007me"
      "ssage\030\003 \001(\014\"O\n\020SubscribeRequest\022\r\n\005topic"
      "\030\001 \001(\t\022\023\n\013requestNode\030\002 \001(\t\022\027\n\017is_subscr"
      "iption\030\003 \001(\010\"\245\001\n\017MessageMetadata\022\014\n\004port"
      "\030\001 \001(\r\022\014\n\004host\030\002 \001(\t\022\025\n\rfriendly_name\030\003 "
      "\001(\t\022\021\n\tis_master\030\004 \001(\010\022\030\n\020software_packa"
      "ge\030\005 \001(\t\022\030\n\020software_version\030\006 \001(\t\022\030\n\005po"
      "rts\030\007 \001(\0132\t.PortList\"\216\001\n\005Error\022\022\n\nerror_"
      "type\030\001 \001(\t\022&\n\010severity\030\002 \001(\0162\024.Error.Err"
      "orSeverity\"I\n\rErrorSeverity\022\017\n\013DEPRECATI"
      "ON\020\000\022\013\n\007WARNING\020\001\022\t\n\005ERROR\020\002\022\017\n\013CATASTRO"
      "PHE\020\003\")\n\010MidiData\022\017\n\007channel\030\001 \001(\r\022\014\n\004da"
      "ta\030\002 \001(\014\"\235\004\n\013MidiMessage\022\022\n\nmessage_id\030\001"
      " \001(\t\022\024\n\014last_message\030\002 \001(\t\022/\n\014message_ty"
      "pe\030\005 \001(\0162\031.MidiMessage.MessageTypes\022,\n\020m"
      "essage_metadata\030\006 \001(\0132\020.MessageMetadataH"
      "\000\022\027\n\005error\030\007 \001(\0132\006.ErrorH\000\022\036\n\tmidi_data\030"
      "\010 \001(\0132\t.MidiDataH\000\022\027\n\racked_message\030\t \001("
      "\tH\000\022\032\n\005ports\030\n \001(\0132\t.PortListH\000\022.\n\021publi"
      "shed_message\030\013 \001(\0132\021.PublishedMessageH\000\022"
      ".\n\021subscribe_request\030\014 \001(\0132\021.SubscribeRe"
      "questH\000\"\253\001\n\014MessageTypes\022\021\n\rHOST_ANNOUNC"
      "E\020\000\022\017\n\013HOST_RETIRE\020\001\022\024\n\020RESEND_REQUESTED"
      "\020\002\022\t\n\005ERROR\020\003\022\r\n\tMIDI_DATA\020\004\022\007\n\003ACK\020\005\022\020\n"
      "\014PORT_REQUEST\020\006\022\025\n\021PUBLISHED_MESSAGE\020\007\022\025"
      "\n\021SUBSCRIBE_REQUEST\020\010B\t\n\007payloadb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1280);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "midimessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_midimessage_2eproto
const ::google::protobuf::EnumDescriptor* PortDescription_Direction_descriptor() {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_midimessage_2eproto::file_level_enum_descriptors[0];
}
bool PortDescription_Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PortDescription_Direction PortDescription::IN;
const PortDescription_Direction PortDescription::OUT;
const PortDescription_Direction PortDescription::INOUT;
const PortDescription_Direction PortDescription::Direction_MIN;
const PortDescription_Direction PortDescription::Direction_MAX;
const int PortDescription::Direction_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Error_ErrorSeverity_descriptor() {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_midimessage_2eproto::file_level_enum_descriptors[1];
}
bool Error_ErrorSeverity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Error_ErrorSeverity Error::DEPRECATION;
const Error_ErrorSeverity Error::WARNING;
const Error_ErrorSeverity Error::ERROR;
const Error_ErrorSeverity Error::CATASTROPHE;
const Error_ErrorSeverity Error::ErrorSeverity_MIN;
const Error_ErrorSeverity Error::ErrorSeverity_MAX;
const int Error::ErrorSeverity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MidiMessage_MessageTypes_descriptor() {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_midimessage_2eproto::file_level_enum_descriptors[2];
}
bool MidiMessage_MessageTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MidiMessage_MessageTypes MidiMessage::HOST_ANNOUNCE;
const MidiMessage_MessageTypes MidiMessage::HOST_RETIRE;
const MidiMessage_MessageTypes MidiMessage::RESEND_REQUESTED;
const MidiMessage_MessageTypes MidiMessage::ERROR;
const MidiMessage_MessageTypes MidiMessage::MIDI_DATA;
const MidiMessage_MessageTypes MidiMessage::ACK;
const MidiMessage_MessageTypes MidiMessage::PORT_REQUEST;
const MidiMessage_MessageTypes MidiMessage::PUBLISHED_MESSAGE;
const MidiMessage_MessageTypes MidiMessage::SUBSCRIBE_REQUEST;
const MidiMessage_MessageTypes MidiMessage::MessageTypes_MIN;
const MidiMessage_MessageTypes MidiMessage::MessageTypes_MAX;
const int MidiMessage::MessageTypes_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PortDescription::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PortDescription::kDirectionFieldNumber;
const int PortDescription::kNameFieldNumber;
const int PortDescription::kCreateDynamicFieldNumber;
const int PortDescription::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PortDescription::PortDescription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_PortDescription.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PortDescription)
}
PortDescription::PortDescription(const PortDescription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&direction_, &from.direction_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_) -
    reinterpret_cast<char*>(&direction_)) + sizeof(key_));
  // @@protoc_insertion_point(copy_constructor:PortDescription)
}

void PortDescription::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(key_));
}

PortDescription::~PortDescription() {
  // @@protoc_insertion_point(destructor:PortDescription)
  SharedDtor();
}

void PortDescription::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PortDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PortDescription::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PortDescription& PortDescription::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_PortDescription.base);
  return *internal_default_instance();
}


void PortDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:PortDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(key_));
  _internal_metadata_.Clear();
}

bool PortDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PortDescription)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PortDescription.Direction direction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_direction(static_cast< ::PortDescription_Direction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PortDescription.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool create_dynamic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_dynamic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PortDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PortDescription)
  return false;
#undef DO_
}

void PortDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PortDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PortDescription.Direction direction = 1;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->direction(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PortDescription.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bool create_dynamic = 3;
  if (this->create_dynamic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->create_dynamic(), output);
  }

  // int32 key = 4;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PortDescription)
}

::google::protobuf::uint8* PortDescription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PortDescription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PortDescription.Direction direction = 1;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->direction(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PortDescription.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bool create_dynamic = 3;
  if (this->create_dynamic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->create_dynamic(), target);
  }

  // int32 key = 4;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PortDescription)
  return target;
}

size_t PortDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PortDescription)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .PortDescription.Direction direction = 1;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
  }

  // bool create_dynamic = 3;
  if (this->create_dynamic() != 0) {
    total_size += 1 + 1;
  }

  // int32 key = 4;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PortDescription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PortDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const PortDescription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PortDescription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PortDescription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PortDescription)
    MergeFrom(*source);
  }
}

void PortDescription::MergeFrom(const PortDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PortDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.create_dynamic() != 0) {
    set_create_dynamic(from.create_dynamic());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void PortDescription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PortDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PortDescription::CopyFrom(const PortDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PortDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortDescription::IsInitialized() const {
  return true;
}

void PortDescription::Swap(PortDescription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PortDescription::InternalSwap(PortDescription* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(direction_, other->direction_);
  swap(create_dynamic_, other->create_dynamic_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PortDescription::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PortList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PortList::kPortsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PortList::PortList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_PortList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PortList)
}
PortList::PortList(const PortList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ports_(from.ports_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PortList)
}

void PortList::SharedCtor() {
}

PortList::~PortList() {
  // @@protoc_insertion_point(destructor:PortList)
  SharedDtor();
}

void PortList::SharedDtor() {
}

void PortList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PortList::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PortList& PortList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_PortList.base);
  return *internal_default_instance();
}


void PortList::Clear() {
// @@protoc_insertion_point(message_clear_start:PortList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ports_.Clear();
  _internal_metadata_.Clear();
}

bool PortList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PortList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PortDescription ports = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PortList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PortList)
  return false;
#undef DO_
}

void PortList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PortList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PortDescription ports = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->ports(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PortList)
}

::google::protobuf::uint8* PortList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PortList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PortDescription ports = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->ports(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PortList)
  return target;
}

size_t PortList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PortList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .PortDescription ports = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ports_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ports(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PortList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PortList)
  GOOGLE_DCHECK_NE(&from, this);
  const PortList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PortList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PortList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PortList)
    MergeFrom(*source);
  }
}

void PortList::MergeFrom(const PortList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PortList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ports_.MergeFrom(from.ports_);
}

void PortList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PortList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PortList::CopyFrom(const PortList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PortList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortList::IsInitialized() const {
  return true;
}

void PortList::Swap(PortList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PortList::InternalSwap(PortList* other) {
  using std::swap;
  CastToBase(&ports_)->InternalSwap(CastToBase(&other->ports_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PortList::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PublishedMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PublishedMessage::kTopicFieldNumber;
const int PublishedMessage::kSenderFieldNumber;
const int PublishedMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PublishedMessage::PublishedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_PublishedMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PublishedMessage)
}
PublishedMessage::PublishedMessage(const PublishedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:PublishedMessage)
}

void PublishedMessage::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PublishedMessage::~PublishedMessage() {
  // @@protoc_insertion_point(destructor:PublishedMessage)
  SharedDtor();
}

void PublishedMessage::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PublishedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PublishedMessage::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PublishedMessage& PublishedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_PublishedMessage.base);
  return *internal_default_instance();
}


void PublishedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PublishedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PublishedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PublishedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PublishedMessage.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PublishedMessage.sender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PublishedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PublishedMessage)
  return false;
#undef DO_
}

void PublishedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PublishedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PublishedMessage.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PublishedMessage.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender(), output);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PublishedMessage)
}

::google::protobuf::uint8* PublishedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PublishedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PublishedMessage.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PublishedMessage.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PublishedMessage)
  return target;
}

size_t PublishedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PublishedMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string sender = 2;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublishedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PublishedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PublishedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PublishedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PublishedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PublishedMessage)
    MergeFrom(*source);
  }
}

void PublishedMessage::MergeFrom(const PublishedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PublishedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void PublishedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PublishedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublishedMessage::CopyFrom(const PublishedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PublishedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublishedMessage::IsInitialized() const {
  return true;
}

void PublishedMessage::Swap(PublishedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PublishedMessage::InternalSwap(PublishedMessage* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sender_.Swap(&other->sender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PublishedMessage::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kTopicFieldNumber;
const int SubscribeRequest::kRequestNodeFieldNumber;
const int SubscribeRequest::kIsSubscriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_SubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  requestnode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.requestnode().size() > 0) {
    requestnode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestnode_);
  }
  is_subscription_ = from.is_subscription_;
  // @@protoc_insertion_point(copy_constructor:SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestnode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_subscription_ = false;
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestnode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_SubscribeRequest.base);
  return *internal_default_instance();
}


void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestnode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_subscription_ = false;
  _internal_metadata_.Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SubscribeRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string requestNode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestnode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->requestnode().data(), static_cast<int>(this->requestnode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SubscribeRequest.requestNode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_subscription = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_subscription_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SubscribeRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string requestNode = 2;
  if (this->requestnode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestnode().data(), static_cast<int>(this->requestnode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SubscribeRequest.requestNode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->requestnode(), output);
  }

  // bool is_subscription = 3;
  if (this->is_subscription() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_subscription(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SubscribeRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string requestNode = 2;
  if (this->requestnode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestnode().data(), static_cast<int>(this->requestnode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SubscribeRequest.requestNode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->requestnode(), target);
  }

  // bool is_subscription = 3;
  if (this->is_subscription() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_subscription(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string requestNode = 2;
  if (this->requestnode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->requestnode());
  }

  // bool is_subscription = 3;
  if (this->is_subscription() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.requestnode().size() > 0) {

    requestnode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestnode_);
  }
  if (from.is_subscription() != 0) {
    set_is_subscription(from.is_subscription());
  }
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  requestnode_.Swap(&other->requestnode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_subscription_, other->is_subscription_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageMetadata::InitAsDefaultInstance() {
  ::_MessageMetadata_default_instance_._instance.get_mutable()->ports_ = const_cast< ::PortList*>(
      ::PortList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageMetadata::kPortFieldNumber;
const int MessageMetadata::kHostFieldNumber;
const int MessageMetadata::kFriendlyNameFieldNumber;
const int MessageMetadata::kIsMasterFieldNumber;
const int MessageMetadata::kSoftwarePackageFieldNumber;
const int MessageMetadata::kSoftwareVersionFieldNumber;
const int MessageMetadata::kPortsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageMetadata::MessageMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_MessageMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageMetadata)
}
MessageMetadata::MessageMetadata(const MessageMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friendly_name().size() > 0) {
    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  software_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.software_package().size() > 0) {
    software_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.software_package_);
  }
  software_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.software_version().size() > 0) {
    software_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.software_version_);
  }
  if (from.has_ports()) {
    ports_ = new ::PortList(*from.ports_);
  } else {
    ports_ = NULL;
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_master_) -
    reinterpret_cast<char*>(&port_)) + sizeof(is_master_));
  // @@protoc_insertion_point(copy_constructor:MessageMetadata)
}

void MessageMetadata::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  software_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  software_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ports_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_master_) -
      reinterpret_cast<char*>(&ports_)) + sizeof(is_master_));
}

MessageMetadata::~MessageMetadata() {
  // @@protoc_insertion_point(destructor:MessageMetadata)
  SharedDtor();
}

void MessageMetadata::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendly_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  software_package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  software_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ports_;
}

void MessageMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageMetadata::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageMetadata& MessageMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_MessageMetadata.base);
  return *internal_default_instance();
}


void MessageMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendly_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  software_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  software_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ports_ != NULL) {
    delete ports_;
  }
  ports_ = NULL;
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_master_) -
      reinterpret_cast<char*>(&port_)) + sizeof(is_master_));
  _internal_metadata_.Clear();
}

bool MessageMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageMetadata.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friendly_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friendly_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageMetadata.friendly_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_master = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_master_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string software_package = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_software_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->software_package().data(), static_cast<int>(this->software_package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageMetadata.software_package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string software_version = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_software_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->software_version().data(), static_cast<int>(this->software_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MessageMetadata.software_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PortList ports = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageMetadata)
  return false;
#undef DO_
}

void MessageMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->port(), output);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // string friendly_name = 3;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.friendly_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->friendly_name(), output);
  }

  // bool is_master = 4;
  if (this->is_master() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_master(), output);
  }

  // string software_package = 5;
  if (this->software_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->software_package().data(), static_cast<int>(this->software_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.software_package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->software_package(), output);
  }

  // string software_version = 6;
  if (this->software_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->software_version().data(), static_cast<int>(this->software_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.software_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->software_version(), output);
  }

  // .PortList ports = 7;
  if (this->has_ports()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_ports(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageMetadata)
}

::google::protobuf::uint8* MessageMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 port = 1;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->port(), target);
  }

  // string host = 2;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // string friendly_name = 3;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.friendly_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->friendly_name(), target);
  }

  // bool is_master = 4;
  if (this->is_master() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_master(), target);
  }

  // string software_package = 5;
  if (this->software_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->software_package().data(), static_cast<int>(this->software_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.software_package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->software_package(), target);
  }

  // string software_version = 6;
  if (this->software_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->software_version().data(), static_cast<int>(this->software_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MessageMetadata.software_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->software_version(), target);
  }

  // .PortList ports = 7;
  if (this->has_ports()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_ports(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageMetadata)
  return target;
}

size_t MessageMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host = 2;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // string friendly_name = 3;
  if (this->friendly_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friendly_name());
  }

  // string software_package = 5;
  if (this->software_package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->software_package());
  }

  // string software_version = 6;
  if (this->software_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->software_version());
  }

  // .PortList ports = 7;
  if (this->has_ports()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ports_);
  }

  // uint32 port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // bool is_master = 4;
  if (this->is_master() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageMetadata)
    MergeFrom(*source);
  }
}

void MessageMetadata::MergeFrom(const MessageMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.friendly_name().size() > 0) {

    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  if (from.software_package().size() > 0) {

    software_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.software_package_);
  }
  if (from.software_version().size() > 0) {

    software_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.software_version_);
  }
  if (from.has_ports()) {
    mutable_ports()->::PortList::MergeFrom(from.ports());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.is_master() != 0) {
    set_is_master(from.is_master());
  }
}

void MessageMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageMetadata::CopyFrom(const MessageMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageMetadata::IsInitialized() const {
  return true;
}

void MessageMetadata::Swap(MessageMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageMetadata::InternalSwap(MessageMetadata* other) {
  using std::swap;
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  friendly_name_.Swap(&other->friendly_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  software_package_.Swap(&other->software_package_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  software_version_.Swap(&other->software_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ports_, other->ports_);
  swap(port_, other->port_);
  swap(is_master_, other->is_master_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageMetadata::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kErrorTypeFieldNumber;
const int Error::kSeverityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_Error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_type().size() > 0) {
    error_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_type_);
  }
  severity_ = from.severity_;
  // @@protoc_insertion_point(copy_constructor:Error)
}

void Error::SharedCtor() {
  error_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:Error)
  SharedDtor();
}

void Error::SharedDtor() {
  error_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_Error.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  severity_ = 0;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string error_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_type().data(), static_cast<int>(this->error_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Error.error_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Error.ErrorSeverity severity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::Error_ErrorSeverity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_type = 1;
  if (this->error_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_type().data(), static_cast<int>(this->error_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Error.error_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->error_type(), output);
  }

  // .Error.ErrorSeverity severity = 2;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->severity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_type = 1;
  if (this->error_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_type().data(), static_cast<int>(this->error_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Error.error_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->error_type(), target);
  }

  // .Error.ErrorSeverity severity = 2;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->severity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_type = 1;
  if (this->error_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_type());
  }

  // .Error.ErrorSeverity severity = 2;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_type().size() > 0) {

    error_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_type_);
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  error_type_.Swap(&other->error_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(severity_, other->severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MidiData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MidiData::kChannelFieldNumber;
const int MidiData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MidiData::MidiData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_MidiData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MidiData)
}
MidiData::MidiData(const MidiData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:MidiData)
}

void MidiData::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
}

MidiData::~MidiData() {
  // @@protoc_insertion_point(destructor:MidiData)
  SharedDtor();
}

void MidiData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MidiData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MidiData::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MidiData& MidiData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_MidiData.base);
  return *internal_default_instance();
}


void MidiData::Clear() {
// @@protoc_insertion_point(message_clear_start:MidiData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
  _internal_metadata_.Clear();
}

bool MidiData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MidiData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MidiData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MidiData)
  return false;
#undef DO_
}

void MidiData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MidiData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MidiData)
}

::google::protobuf::uint8* MidiData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MidiData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MidiData)
  return target;
}

size_t MidiData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MidiData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint32 channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MidiData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MidiData)
  GOOGLE_DCHECK_NE(&from, this);
  const MidiData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MidiData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MidiData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MidiData)
    MergeFrom(*source);
  }
}

void MidiData::MergeFrom(const MidiData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MidiData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void MidiData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MidiData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MidiData::CopyFrom(const MidiData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MidiData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MidiData::IsInitialized() const {
  return true;
}

void MidiData::Swap(MidiData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MidiData::InternalSwap(MidiData* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MidiData::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MidiMessage::InitAsDefaultInstance() {
  ::_MidiMessage_default_instance_.message_metadata_ = const_cast< ::MessageMetadata*>(
      ::MessageMetadata::internal_default_instance());
  ::_MidiMessage_default_instance_.error_ = const_cast< ::Error*>(
      ::Error::internal_default_instance());
  ::_MidiMessage_default_instance_.midi_data_ = const_cast< ::MidiData*>(
      ::MidiData::internal_default_instance());
  ::_MidiMessage_default_instance_.acked_message_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::_MidiMessage_default_instance_.ports_ = const_cast< ::PortList*>(
      ::PortList::internal_default_instance());
  ::_MidiMessage_default_instance_.published_message_ = const_cast< ::PublishedMessage*>(
      ::PublishedMessage::internal_default_instance());
  ::_MidiMessage_default_instance_.subscribe_request_ = const_cast< ::SubscribeRequest*>(
      ::SubscribeRequest::internal_default_instance());
}
void MidiMessage::set_allocated_message_metadata(::MessageMetadata* message_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (message_metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message_metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message_metadata, submessage_arena);
    }
    set_has_message_metadata();
    payload_.message_metadata_ = message_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:MidiMessage.message_metadata)
}
void MidiMessage::set_allocated_error(::Error* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    payload_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:MidiMessage.error)
}
void MidiMessage::set_allocated_midi_data(::MidiData* midi_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (midi_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      midi_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, midi_data, submessage_arena);
    }
    set_has_midi_data();
    payload_.midi_data_ = midi_data;
  }
  // @@protoc_insertion_point(field_set_allocated:MidiMessage.midi_data)
}
void MidiMessage::set_allocated_ports(::PortList* ports) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (ports) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ports = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ports, submessage_arena);
    }
    set_has_ports();
    payload_.ports_ = ports;
  }
  // @@protoc_insertion_point(field_set_allocated:MidiMessage.ports)
}
void MidiMessage::set_allocated_published_message(::PublishedMessage* published_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (published_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      published_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, published_message, submessage_arena);
    }
    set_has_published_message();
    payload_.published_message_ = published_message;
  }
  // @@protoc_insertion_point(field_set_allocated:MidiMessage.published_message)
}
void MidiMessage::set_allocated_subscribe_request(::SubscribeRequest* subscribe_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (subscribe_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subscribe_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subscribe_request, submessage_arena);
    }
    set_has_subscribe_request();
    payload_.subscribe_request_ = subscribe_request;
  }
  // @@protoc_insertion_point(field_set_allocated:MidiMessage.subscribe_request)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MidiMessage::kMessageIdFieldNumber;
const int MidiMessage::kLastMessageFieldNumber;
const int MidiMessage::kMessageTypeFieldNumber;
const int MidiMessage::kMessageMetadataFieldNumber;
const int MidiMessage::kErrorFieldNumber;
const int MidiMessage::kMidiDataFieldNumber;
const int MidiMessage::kAckedMessageFieldNumber;
const int MidiMessage::kPortsFieldNumber;
const int MidiMessage::kPublishedMessageFieldNumber;
const int MidiMessage::kSubscribeRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MidiMessage::MidiMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_midimessage_2eproto::scc_info_MidiMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MidiMessage)
}
MidiMessage::MidiMessage(const MidiMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message_id().size() > 0) {
    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  last_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_message().size() > 0) {
    last_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_message_);
  }
  message_type_ = from.message_type_;
  clear_has_payload();
  switch (from.payload_case()) {
    case kMessageMetadata: {
      mutable_message_metadata()->::MessageMetadata::MergeFrom(from.message_metadata());
      break;
    }
    case kError: {
      mutable_error()->::Error::MergeFrom(from.error());
      break;
    }
    case kMidiData: {
      mutable_midi_data()->::MidiData::MergeFrom(from.midi_data());
      break;
    }
    case kAckedMessage: {
      set_acked_message(from.acked_message());
      break;
    }
    case kPorts: {
      mutable_ports()->::PortList::MergeFrom(from.ports());
      break;
    }
    case kPublishedMessage: {
      mutable_published_message()->::PublishedMessage::MergeFrom(from.published_message());
      break;
    }
    case kSubscribeRequest: {
      mutable_subscribe_request()->::SubscribeRequest::MergeFrom(from.subscribe_request());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MidiMessage)
}

void MidiMessage::SharedCtor() {
  message_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_type_ = 0;
  clear_has_payload();
}

MidiMessage::~MidiMessage() {
  // @@protoc_insertion_point(destructor:MidiMessage)
  SharedDtor();
}

void MidiMessage::SharedDtor() {
  message_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_payload()) {
    clear_payload();
  }
}

void MidiMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MidiMessage::descriptor() {
  ::protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MidiMessage& MidiMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_midimessage_2eproto::scc_info_MidiMessage.base);
  return *internal_default_instance();
}


void MidiMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:MidiMessage)
  switch (payload_case()) {
    case kMessageMetadata: {
      delete payload_.message_metadata_;
      break;
    }
    case kError: {
      delete payload_.error_;
      break;
    }
    case kMidiData: {
      delete payload_.midi_data_;
      break;
    }
    case kAckedMessage: {
      payload_.acked_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPorts: {
      delete payload_.ports_;
      break;
    }
    case kPublishedMessage: {
      delete payload_.published_message_;
      break;
    }
    case kSubscribeRequest: {
      delete payload_.subscribe_request_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void MidiMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MidiMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_type_ = 0;
  clear_payload();
  _internal_metadata_.Clear();
}

bool MidiMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MidiMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_id().data(), static_cast<int>(this->message_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MidiMessage.message_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_message().data(), static_cast<int>(this->last_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MidiMessage.last_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MidiMessage.MessageTypes message_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_message_type(static_cast< ::MidiMessage_MessageTypes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MessageMetadata message_metadata = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Error error = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .MidiData midi_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_midi_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string acked_message = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acked_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->acked_message().data(), static_cast<int>(this->acked_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MidiMessage.acked_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PortList ports = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PublishedMessage published_message = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_published_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .SubscribeRequest subscribe_request = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subscribe_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MidiMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MidiMessage)
  return false;
#undef DO_
}

void MidiMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MidiMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MidiMessage.message_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message_id(), output);
  }

  // string last_message = 2;
  if (this->last_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_message().data(), static_cast<int>(this->last_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MidiMessage.last_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->last_message(), output);
  }

  // .MidiMessage.MessageTypes message_type = 5;
  if (this->message_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->message_type(), output);
  }

  // .MessageMetadata message_metadata = 6;
  if (has_message_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_message_metadata(), output);
  }

  // .Error error = 7;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_error(), output);
  }

  // .MidiData midi_data = 8;
  if (has_midi_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_midi_data(), output);
  }

  // string acked_message = 9;
  if (has_acked_message()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acked_message().data(), static_cast<int>(this->acked_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MidiMessage.acked_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->acked_message(), output);
  }

  // .PortList ports = 10;
  if (has_ports()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_ports(), output);
  }

  // .PublishedMessage published_message = 11;
  if (has_published_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_published_message(), output);
  }

  // .SubscribeRequest subscribe_request = 12;
  if (has_subscribe_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_subscribe_request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MidiMessage)
}

::google::protobuf::uint8* MidiMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MidiMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_id = 1;
  if (this->message_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_id().data(), static_cast<int>(this->message_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MidiMessage.message_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message_id(), target);
  }

  // string last_message = 2;
  if (this->last_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_message().data(), static_cast<int>(this->last_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MidiMessage.last_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->last_message(), target);
  }

  // .MidiMessage.MessageTypes message_type = 5;
  if (this->message_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->message_type(), target);
  }

  // .MessageMetadata message_metadata = 6;
  if (has_message_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_message_metadata(), deterministic, target);
  }

  // .Error error = 7;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_error(), deterministic, target);
  }

  // .MidiData midi_data = 8;
  if (has_midi_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_midi_data(), deterministic, target);
  }

  // string acked_message = 9;
  if (has_acked_message()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acked_message().data(), static_cast<int>(this->acked_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MidiMessage.acked_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->acked_message(), target);
  }

  // .PortList ports = 10;
  if (has_ports()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_ports(), deterministic, target);
  }

  // .PublishedMessage published_message = 11;
  if (has_published_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_published_message(), deterministic, target);
  }

  // .SubscribeRequest subscribe_request = 12;
  if (has_subscribe_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_subscribe_request(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MidiMessage)
  return target;
}

size_t MidiMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MidiMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message_id = 1;
  if (this->message_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_id());
  }

  // string last_message = 2;
  if (this->last_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_message());
  }

  // .MidiMessage.MessageTypes message_type = 5;
  if (this->message_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->message_type());
  }

  switch (payload_case()) {
    // .MessageMetadata message_metadata = 6;
    case kMessageMetadata: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.message_metadata_);
      break;
    }
    // .Error error = 7;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.error_);
      break;
    }
    // .MidiData midi_data = 8;
    case kMidiData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.midi_data_);
      break;
    }
    // string acked_message = 9;
    case kAckedMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acked_message());
      break;
    }
    // .PortList ports = 10;
    case kPorts: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.ports_);
      break;
    }
    // .PublishedMessage published_message = 11;
    case kPublishedMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.published_message_);
      break;
    }
    // .SubscribeRequest subscribe_request = 12;
    case kSubscribeRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.subscribe_request_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MidiMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MidiMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MidiMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MidiMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MidiMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MidiMessage)
    MergeFrom(*source);
  }
}

void MidiMessage::MergeFrom(const MidiMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MidiMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_id().size() > 0) {

    message_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_id_);
  }
  if (from.last_message().size() > 0) {

    last_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_message_);
  }
  if (from.message_type() != 0) {
    set_message_type(from.message_type());
  }
  switch (from.payload_case()) {
    case kMessageMetadata: {
      mutable_message_metadata()->::MessageMetadata::MergeFrom(from.message_metadata());
      break;
    }
    case kError: {
      mutable_error()->::Error::MergeFrom(from.error());
      break;
    }
    case kMidiData: {
      mutable_midi_data()->::MidiData::MergeFrom(from.midi_data());
      break;
    }
    case kAckedMessage: {
      set_acked_message(from.acked_message());
      break;
    }
    case kPorts: {
      mutable_ports()->::PortList::MergeFrom(from.ports());
      break;
    }
    case kPublishedMessage: {
      mutable_published_message()->::PublishedMessage::MergeFrom(from.published_message());
      break;
    }
    case kSubscribeRequest: {
      mutable_subscribe_request()->::SubscribeRequest::MergeFrom(from.subscribe_request());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void MidiMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MidiMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MidiMessage::CopyFrom(const MidiMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MidiMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MidiMessage::IsInitialized() const {
  return true;
}

void MidiMessage::Swap(MidiMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MidiMessage::InternalSwap(MidiMessage* other) {
  using std::swap;
  message_id_.Swap(&other->message_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_message_.Swap(&other->last_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(message_type_, other->message_type_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MidiMessage::GetMetadata() const {
  protobuf_midimessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_midimessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PortDescription* Arena::CreateMaybeMessage< ::PortDescription >(Arena* arena) {
  return Arena::CreateInternal< ::PortDescription >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PortList* Arena::CreateMaybeMessage< ::PortList >(Arena* arena) {
  return Arena::CreateInternal< ::PortList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PublishedMessage* Arena::CreateMaybeMessage< ::PublishedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::PublishedMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SubscribeRequest* Arena::CreateMaybeMessage< ::SubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::SubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MessageMetadata* Arena::CreateMaybeMessage< ::MessageMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::MessageMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Error* Arena::CreateMaybeMessage< ::Error >(Arena* arena) {
  return Arena::CreateInternal< ::Error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MidiData* Arena::CreateMaybeMessage< ::MidiData >(Arena* arena) {
  return Arena::CreateInternal< ::MidiData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MidiMessage* Arena::CreateMaybeMessage< ::MidiMessage >(Arena* arena) {
  return Arena::CreateInternal< ::MidiMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
